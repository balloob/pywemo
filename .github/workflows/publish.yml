name: Publish
on:
  release:
    types: [published]
  push:  # Run a dry-run on pushes to the main branch.
    branches:
      - main
    paths:
      - .github/**
      - pyproject.toml
      - scripts/build.sh

permissions: {}  # No permissions by default. Permissions are added per-job.

env:
  # Artifact name to use for the release. The build matrix builds and tests
  # multiple Python versions. But the release only comes from this single
  # version.
  DIST_ARTIFACT: dist-3.8

jobs:
  build:
    name: Build
    uses: ./.github/workflows/build.yml

  check:
    name: Check version and tag match
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Check if tag version matches project version
        if: github.event.release
        env:
          BUILD_VERSION: ${{ needs.build.outputs.version }}
        run: |
          echo "TAG: $GITHUB_REF_NAME"
          echo "VERSION: $BUILD_VERSION"
          if [[ "$GITHUB_REF_NAME" != "$BUILD_VERSION" ]]; then exit 1; fi

  hash:
    name: Generate SHA256 hashes
    needs: [build, check]
    runs-on: ubuntu-latest
    steps:
      - name: Download dist artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: ${{ env.DIST_ARTIFACT }}
          path: dist
      - name: Hash dist files
        id: hash
        env:
          PYWEMO_VERSION: ${{ needs.build.outputs.version }}
        working-directory: dist
        run: sha256sum * | tee "pywemo-${PYWEMO_VERSION}.sha256sum.txt"
      - name: Archive hashes
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          if-no-files-found: error
          name: hashes
          path: dist/pywemo-${{ needs.build.outputs.version }}.sha256sum.txt

  sigstore:
    name: Generate Sigstore signatures
    needs: [build, hash]
    runs-on: ubuntu-latest
    permissions:
      # For Sigstore provenance.
      id-token: write 
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      - name: Sign the release
        uses: sigstore/gh-action-sigstore-python@e323e1b02e26cc6600843935562c862b94200b0c # v1.2.3
        with:
          inputs: ./${DIST_ARTIFACT}/* ./hashes/*
          upload-signing-artifacts: true

  assets:
    name: Create release assets
    needs: [build, hash, sigstore]
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      - name: Populate release assets
        run: |
          mkdir -p ./release
          cp \
            ./${DIST_ARTIFACT}/* \
            ./hashes/* \
            ./signing-artifacts-sigstore/*/*.sigstore \
            ./release/
      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          if-no-files-found: error
          name: release
          path: release/*

  github-release:
    name: Publish to GitHub Release
    needs: [assets]
    runs-on: ubuntu-latest
    if: github.event.release
    environment: release
    permissions:
      # Needed to run "gh release upload" and "rest.repos.updateRelease".
      contents: write
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: release
          path: release
      - name: Upload release assets
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release upload "${GITHUB_REF_NAME}" \
            --repo "${GITHUB_REPOSITORY}" \
            ./release/*

  pypi-release:
    name: Publish to PyPI
    needs: [github-release]
    runs-on: ubuntu-latest
    if: github.event.release
    environment: release
    permissions:
      # Needed for PyPI trusted publishing.
      id-token: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: ${{ env.DIST_ARTIFACT }}
          path: dist
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@a56da0b891b3dc519c7ee3284aff1fad93cc8598 # v1.8.6
